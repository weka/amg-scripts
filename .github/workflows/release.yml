name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        working-directory: tools/amgctl
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="amgctl-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            BINARY_NAME="amgctl-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi
          go build -ldflags="-s -w" -o "$BINARY_NAME" .
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: tools/amgctl/amgctl-*

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries
          merge-multiple: true

      - name: Generate checksums
        run: |
          cd binaries
          sha256sum * > checksums.txt
          
      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag }}
          body: |
            ## Changes in ${{ steps.tag.outputs.tag }}
            
            ### Installation
            
            Download the appropriate binary for your platform:
            
            - **Linux (x64)**: `amgctl-linux-amd64`
            - **Linux (ARM64)**: `amgctl-linux-arm64`
            - **macOS (Intel)**: `amgctl-darwin-amd64`
            - **macOS (Apple Silicon)**: `amgctl-darwin-arm64`
            - **Windows (x64)**: `amgctl-windows-amd64.exe`
            
            ### Self-Update
            
            If you already have amgctl installed, you can update to this version by running:
            
            ```bash
            amgctl update
            ```
            
            ### Verification
            
            All binaries include SHA256 checksums in `checksums.txt` for verification.
            
          files: |
            binaries/*
          draft: false
          prerelease: false
