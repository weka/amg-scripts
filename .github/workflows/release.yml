name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnvidia-ml-dev
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu libnvidia-ml-dev:arm64
          fi

      - name: Build binary
        working-directory: tools/amgctl
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            export CC=aarch64-linux-gnu-gcc
          fi
          BINARY_NAME="amgctl-${{ matrix.goos }}-${{ matrix.goarch }}"
          go build -ldflags="-s -w" -o "$BINARY_NAME" .
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: tools/amgctl/amgctl-*

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries
          merge-multiple: true

      - name: Generate checksums
        run: |
          cd binaries
          sha256sum * > checksums.txt
          
      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag }}
          body: |
            ## Changes in ${{ steps.tag.outputs.tag }}
            
            ### Installation
            
            Download the appropriate binary for your Linux platform:
            
            - **Linux (x64)**: `amgctl-linux-amd64`
            - **Linux (ARM64)**: `amgctl-linux-arm64`
            
            ### Self-Update
            
            If you already have amgctl installed, you can update to this version by running:
            
            ```bash
            amgctl update
            ```
            
            ### Verification
            
            All binaries include SHA256 checksums in `checksums.txt` for verification.
            
          files: |
            binaries/*
          draft: false
          prerelease: false

  docker:
    name: Build and push Docker image
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            AMG_UTILS_VERSION=${{ steps.tag.outputs.tag }}
          tags: |
            sdimitro509/amg:${{ steps.tag.outputs.tag }}
            sdimitro509/amg:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
