name: Go CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'tools/amgctl/**'
      - '.github/workflows/go-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'tools/amgctl/**'
      - '.github/workflows/go-ci.yml'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools/amgctl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('tools/amgctl/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Check Go formatting
        run: |
          make fmt-check

      - name: Run go vet
        run: |
          make vet

      - name: Install golangci-lint
        run: |
          make lint-install

      - name: Run golangci-lint
        run: |
          make lint

      - name: Run tests
        run: |
          make test

      - name: Build project
        run: |
          make build

  # Additional job to ensure the project builds on Linux platforms
  build-matrix:
    name: Build Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    defaults:
      run:
        working-directory: tools/amgctl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o amgctl-${{ matrix.goos }}-${{ matrix.goarch }} .
